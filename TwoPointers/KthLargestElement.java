public class KthLargestElement {	 /*     * @param k : description of k     * @param nums : array of nums     * @return: description of return     */    public int kthLargestElement(int k, int[] nums) {        if(nums == null || nums.length == 0 || k > nums.length) return -1;         return quickSelect(nums, 0, nums.length - 1, nums.length - k + 1);    }        public int quickSelect(int[] nums, int l, int r, int k){        if( l == r) return nums[l];        // quick selection O(n)        int left = l, right = r;        int pivot = nums[right];        while(left < right){            while(left < right && nums[left] < pivot){                left++;            }            nums[right] = nums[left];             while(left < right && nums[right] >= pivot){                right--;            }            nums[left] = nums[right];        }        nums[left] = pivot;        if(left + 1 == k) return nums[left];        else if(left + 1 > k) return quickSelect(nums, l, left - 1, k);        else return quickSelect(nums, left + 1, r, k);    }}