public class MinimumSubArraySum {	/**     * @param nums: an array of integers     * @param s: an integer     * @return: an integer representing the minimum size of subarray     */    public int minimumSize(int[] nums, int s) {        // two pointers O(n), using sliding frame        int left = 0, right = 0;        int sum = 0, min = Integer.MAX_VALUE;        for(; right < nums.length; right++){            sum += nums[right];            if(sum >= s){                min = Math.min(min, right - left + 1);                while(left <= right){                    sum -= nums[left];                    left++;                    if(sum >= s) min = Math.min(min, right - left + 1);                    else break;                }            }        }        if(min == Integer.MAX_VALUE) return -1;        else return min;    }}