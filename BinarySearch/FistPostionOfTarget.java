public class FistPostionOfTarget {	/**     * @param nums: The integer array.     * @param target: Target to find.     * @return: The first position of target. Position starts from 0.     */    public int binarySearch(int[] nums, int target) {        if(nums == null || nums.length == 0) return -1;        return find(nums, target, 0, nums.length - 1);    }        public int find(int[] nums, int target, int left, int right){        if(left > right) return -1;        int mid = left + (right - left) / 2;        if(nums[mid] == target){            if(mid == 0 || nums[mid-1] < nums[mid]){                return mid;            }            else{                return find(nums, target, left, mid - 1);            }        }        else if(nums[mid] < target){            return find(nums, target, mid + 1, right);        }        else {            return find(nums, target, left, mid - 1);        }    }}