public class Search2DMatrix {	/**     * @param matrix, a list of lists of integers     * @param target, an integer     * @return a boolean, indicate whether matrix contains target     */    public boolean searchMatrix(int[][] matrix, int target) {        if(matrix == null || matrix.length == 0 || matrix[0].length == 0) return false;        int m = matrix.length, n = matrix[0].length;        return find(matrix, target, 0, m * n - 1);    }        public boolean find(int[][] matrix, int target, int left, int right){        if(left > right) return false;        int mid = left + (right - left) / 2;        int row = mid / matrix[0].length;        int col = mid % matrix[0].length;        if(matrix[row][col] == target){            return true;        } else if (matrix[row][col] < target) {            return find(matrix, target, mid + 1, right);        } else {            return find(matrix, target, left, mid - 1);        }    }}