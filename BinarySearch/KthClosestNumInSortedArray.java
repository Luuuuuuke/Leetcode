public class KthClosestNumInSortedArray {	/**     * @param A an integer array     * @param target an integer     * @param k a non-negative integer     * @return an integer array     */    public int[] kClosestNumbers(int[] A, int target, int k) {         if(A == null || A.length == 0 || k == 0 || A.length < k) return new int[0];         int[] res = new int[k];         // O(logn) to find target         int idx = find(A, 0, A.length - 1, target);         // O(k) to find k closest element         int count = 1, left = idx - 1, right = idx + 1;         res[0] = A[idx];         while(count < k){             if(right >= A.length || (left >= 0 &&                 Math.abs(target - A[left]) <= Math.abs(target - A[right]))){                 res[count] = A[left];                 left--;             } else{                 res[count] = A[right];                 right++;             }             count++;         }         return res;    }        public int find(int[] nums, int left, int right, int target){       while(left + 1 < right){           int mid = left + (right - left) / 2;           if(nums[mid] == target) return mid;           else if(nums[mid] < target){               left = mid;           }           else {               right = mid;           }       }       if(Math.abs(target - nums[left]) <= Math.abs(target - nums[right])){           return left;       } else{           return right;       }    }}