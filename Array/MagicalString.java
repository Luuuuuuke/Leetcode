public class MagicalString {	public int magicalString(int n) {        if(n == 0){            return 0;        }        int res = 0;        int[] nums = new int[n];        nums[0] = 1;        // idea: traverse while buiding the string the same time, count 1s        int cur = 0;        boolean isOne = true;        for(int i = 0; i < n; i++){            if(nums[i] == 1){                res++;            }            if(cur >= n){                continue;            }            if(nums[i] == 1){                if(isOne){                    nums[cur] = 1;                } else {                    nums[cur] = 2;                }                cur++;                isOne = !isOne;            } else {                if(isOne){                    nums[cur] = 1;                    cur++;                    if(cur < n){                        nums[cur] = 1;                    }                } else {                    nums[cur] = 2;                    cur++;                    if(cur < n){                        nums[cur] = 2;                    }                }                cur ++;                isOne = !isOne;            }        }        return res;    }}