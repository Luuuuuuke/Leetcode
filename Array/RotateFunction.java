public class RotateFunction {	public int maxRotateFunction(int[] A) {        // O(n^2) TLE        // if(A == null || A.length == 0) return 0;        // int max = Integer.MIN_VALUE;        // int len = A.length;        // // len results to be compared        // for(int k = 0; k < len; k++){        //     int sum = 0;        //     // for each k, calculate sum through formula        //     for(int i = 0; i < len; i++){        //         sum += i * A[(len - k + i) % len];        //     }        //     max = Math.max(max, sum);        // }        // return max;                // O(n) solution, math deduction        // for each interation remove once count from each entry, and add len * A[j - 1]        if(A == null || A.length == 0) return 0;        int sum = 0, total = 0, max = 0;        for(int i = 0; i < A.length; i++){            sum += A[i];            total += i * A[i];            max = total;        }        for(int i = 1; i < A.length; i++){            total = total - sum + A.length * A[i - 1];            max = Math.max(max, total);        }        return max;    }}