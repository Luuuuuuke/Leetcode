import java.util.*;public class SortCharacterByFrequency {	private class Node{        char ch;        int count;        Node(char ch, int count){            this.ch = ch;            this.count = count;        }    }        public class NodeComparator implements Comparator<Node>{        public int compare(Node n1, Node n2){            return n2.count - n1.count;        }    }        public String frequencySort(String s) {        if(s == null || s.length() == 0) return "";        List<Node> nodes = new ArrayList<Node>();        HashMap<Character, Node> map = new HashMap<Character, Node>();        for(char ch : s.toCharArray()){            if(!map.containsKey(ch)){                Node nd = new Node(ch, 1);                map.put(ch, nd);                nodes.add(nd);            } else {                map.get(ch).count++;            }        }        Collections.sort(nodes, new NodeComparator());        StringBuilder sb = new StringBuilder();        for(Node nd : nodes){            char ch = nd.ch;            int count = nd.count;            while(count != 0){                sb.append(ch);                count--;            }        }        return sb.toString();    }}