public class heapify {	 /**     * @param A: Given an integer array     * @return: void     */    public void heapify(int[] A) {        // start from the last parent node to the first parent node        // if a parent node is larger then its child, then swap        // O(n)                // get the last parent node        int start = (A.length - 1 - 1) / 2;        for(int i = start; i >= 0; i--){            int k = i;            while(k < A.length){                int smallest = k;                if(k * 2 + 1 < A.length && A[smallest] > A[k * 2 + 1])                     smallest = k * 2 + 1;                if(k * 2 + 2 < A.length && A[smallest] > A[k * 2 + 2])                     smallest = k * 2 + 2;                if(k == smallest) break;                int tmp = A[k];                A[k] = A[smallest];                A[smallest] = tmp;                k = smallest;            }        }    }}