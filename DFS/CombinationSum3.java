import java.util.ArrayList;import java.util.List;public class CombinationSum3 {	public List<List<Integer>> combinationSum3(int k, int n) {        List<List<Integer>> res = new ArrayList<List<Integer>>();        dfs(res, new ArrayList<Integer>(), k, n, 1, 0);        return res;    }        public void dfs(List<List<Integer>> res, List<Integer> sol, int len, int target, int cur, int sum){        if(sol.size() == len){            if(sum == target){                res.add(new ArrayList<Integer>(sol));            }            return;        }        for(int i = cur; i <= 9; i++){            sol.add(i);            sum += i;            dfs(res, sol, len, target, i + 1, sum);            sol.remove(sol.size() - 1);            sum -= i;        }    }}