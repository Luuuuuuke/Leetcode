import java.util.*;public class StobogrammaticNumber2 {	public List<String> findStrobogrammatic(int n) {        List<String> res = new ArrayList<String>();        if(n <= 0) {            res.add("");            return res;        }        char[] digits = {'0', '1', '6', '8', '9'};        dfs(res, new char[n], digits, 0, n - 1);        return res;    }        private void dfs(List<String> res, char[] chs, char[] digits, int left, int right){        if(left > right){            if(chs.length > 1 && chs[0] == '0'){                return;            }            res.add(String.valueOf(chs));            return;        }        for(int i = 0; i < digits.length; i++){            if(left == right && (digits[i] == '6' || digits[i] == '9')) continue;            chs[left] = digits[i];            if(chs[left] == '6'){                chs[right] = '9';            } else if(chs[left] == '9'){                chs[right] = '6';            } else {                chs[right] = chs[left];            }            dfs(res, chs, digits, left + 1, right - 1);        }    }}