public class NumberOfIslands {	 /**     * @param grid a boolean 2D matrix     * @return an integer     */    public int numIslands(boolean[][] grid) {        //DFS method. O(n^2)        int row = grid.length;        if(row == 0) return 0;        int col = grid[0].length;        if(col == 0) return 0;        int count = 0;        if(row == 0 || col == 0) return 0;        for(int i = 0; i < row; i++){            for(int j = 0; j < col; j++){                if(!grid[i][j]) continue;                count++;                dfs(grid, i , j);            }        }        return count;    }        public void dfs(boolean[][] grid, int row, int col){        if(row < 0 || row >= grid.length || col < 0 || col >= grid[0].length || !grid[row][col]) return;        grid[row][col] = false;        dfs(grid, row+1, col);        dfs(grid, row-1, col);        dfs(grid, row, col-1);        dfs(grid, row, col+1);    }}