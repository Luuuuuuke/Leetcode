public class WordSearch1 {	/**     * @param board: A list of lists of character     * @param word: A string     * @return: A boolean     */    public boolean exist(char[][] board, String word) {        for(int i = 0; i < board.length; i++){            for(int j = 0; j < board[0].length; j++){                if(dfs(board, word, i,j, 0)) return true;;            }        }        return false;    }        public boolean dfs(char[][] board, String word, int x, int y, int len){        if(len == word.length()) return true;        if(x < 0 || x >= board.length || y < 0 || y >= board[0].length || board[x][y] != word.charAt(len)) return false;        board[x][y] ^= 256;        boolean res = dfs(board, word, x-1, y, len+1) ||                      dfs(board, word, x+1, y, len+1) ||                      dfs(board, word, x, y-1, len+1) ||                      dfs(board, word, x, y+1, len+1);        board[x][y] ^= 256;        return res;    }}