public class FlattenTreeToLinkedList {	  public class TreeNode {		      int val;		      TreeNode left;		      TreeNode right;		      TreeNode(int x) { val = x; }		  }	public void flatten(TreeNode root) {        helper(root);       }        // four steps to do flattening    // 1. flatten its left tree    // 2. flatten its right tree    // 3. make flattened right tree as the right tree of the last node of the flattened left tree    // 4. make the left tree the right of the root    public TreeNode helper(TreeNode root){        if(root == null) return null;        TreeNode left = helper(root.left);        TreeNode right = helper(root.right);        if(left != null){            TreeNode cur = left;            while(cur.right != null) cur = cur.right;            cur.right = right;            root.right = left;            root.left = null;        }        return root;    }}