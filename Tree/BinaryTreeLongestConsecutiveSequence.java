public class BinaryTreeLongestConsecutiveSequence {	public class TreeNode {	      int val;	      TreeNode left;	      TreeNode right;	      TreeNode(int x) { val = x; }	  }	int max = 0;    public int longestConsecutive(TreeNode root) {        int len = helper(root);        max = Math.max(len, max);        return max;    }        public int helper(TreeNode root){        if(root == null) return 0;        if(root.left == null && root.right == null) return 1;        int leftLen = helper(root.left);        int rightLen = helper(root.right);        int len = 1;        if(root.left != null && root.left.val == root.val + 1){            len += leftLen;        }        if(root.right != null && root.right.val == root.val + 1){            len = Math.max(len, 1 + rightLen);        }        max = Math.max(max, len);        return len;    }}