public class BinaryTreeMaxPathSum {	 public class TreeNode {		     public int val;		      public TreeNode left, right;		      public TreeNode(int val) {		          this.val = val;		          this.left = this.right = null;		      }		  }	private class ReturnType{        int root2any;        int maxPath;        public ReturnType(int root2any, int maxPath){            this.root2any = root2any;            this.maxPath = maxPath;        }    }    /**     * @param root: The root of binary tree.     * @return: An integer.     */    public int maxPathSum(TreeNode root) {        return helper(root).maxPath;    }        public ReturnType helper(TreeNode root){        if(root == null) return new ReturnType(0, Integer.MIN_VALUE);        ReturnType left = helper(root.left);        ReturnType right = helper(root.right);                int root2any = Math.max(left.root2any, right.root2any) + root.val;        root2any = Math.max(root2any, 0);                int maxPath = Math.max(left.maxPath, right.maxPath);        maxPath = Math.max(maxPath, left.root2any + right.root2any + root.val);                return new ReturnType(root2any, maxPath);    }}