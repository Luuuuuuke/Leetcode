public class BalancedBinaryTree {	private class TreeNode{		public int val;		      public TreeNode left, right;		      public TreeNode(int val) {		          this.val = val;		          this.left = this.right = null;		      }	}		private class ReturnType{        boolean isBalanced;        int maxLen;        public ReturnType(boolean isBalanced, int maxLen){            this.isBalanced = isBalanced;            this.maxLen = maxLen;        }    }    /**     * @param root: The root of binary tree.     * @return: True if this Binary tree is Balanced, or false.     */    public boolean isBalanced(TreeNode root) {        return helper(root).isBalanced;    }        public ReturnType helper(TreeNode root){        if(root == null) return new ReturnType(true, 0);        ReturnType left = helper(root.left);        ReturnType right = helper(root.right);        if(!left.isBalanced || !right.isBalanced || Math.abs(left.maxLen - right.maxLen) > 1){            return new ReturnType(false, 1 + Math.max(left.maxLen, right.maxLen));        } else {            return new ReturnType(true, 1 + Math.max(left.maxLen, right.maxLen));        }    }}