public class JumpGame2 {	/**     * @param A: A list of lists of integers     * @return: An integer     */    public int jump(int[] A) {        if(A == null || A.length == 0){            return 1;        }        // dp[i] stands for the minimum # steps to reach i        // if cannot reach, dp[i] = MAX         int[] dp = new int[A.length];        dp[0] = 0;        // initialize         for(int i = 1; i < A.length; i++){            dp[i] = Integer.MAX_VALUE;        }        // dp[i] = min(dp[j] + 1), where j < i and j + A[j] >= i        for(int i = 1; i < A.length; i++){            for(int j = 0; j < i; j++){                if(j + A[j] >= i){                    dp[i] = Math.min(dp[i], dp[j]+1);                }            }            if(dp[i] == Integer.MAX_VALUE){                return Integer.MAX_VALUE;            }        }        return dp[A.length - 1];    }}