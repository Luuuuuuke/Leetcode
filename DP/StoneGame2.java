public class StoneGame2 {	public int stoneGame2(int[] A) {        if(A == null || A.length == 0){            return 0;        }        int len = A.length;        int[][] dp = new int[len * 2][len * 2];        int[][] sum = new int[len * 2][len * 2];        for(int i = 0; i < len * 2; i++){            for(int j = i; j < len * 2; j++){                if(i == j){                    dp[i][j] = 0;                    sum[i][j] = A[i % len];                } else{                    dp[i][j] = Integer.MAX_VALUE;                    sum[i][j] = sum[i][j-1] + A[j % len];                }            }        }        search(0, len*2 - 1, dp, sum);        int min = Integer.MAX_VALUE;        for(int i = 0; i < len; i++){            min = Math.min(min, dp[i][i + len - 1]);        }        return min;    }        private void search(int start, int end, int[][] dp, int[][] sum){        if(dp[start][end] != Integer.MAX_VALUE){            return;        }                for(int i = start; i < end; i++){            search(start, i, dp, sum);            search(i + 1, end, dp, sum);            dp[start][end] = Math.min(dp[start][end], dp[start][i] + dp[i+1][end] + sum[start][end]);        }    }}